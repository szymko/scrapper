#
# DO NOT MODIFY!!!!
# This file is automatically generated by racc 1.4.5
# from racc grammer file "lib/robots/parser.y".
#

require 'racc/parser'


module Robots

  class Parser < Racc::Parser


  def initialize(tokenizer, handler = Robots::Handler.new)
    @tokenizer = tokenizer
    @handler = handler
    super()
  end

  def next_token
    @tokenizer.next_token
  end

  def parse
    do_parse
    @handler
  end

##### racc 1.4.5 generates ###

racc_reduce_table = [
 0, 0, :racc_error,
 2, 5, :_reduce_none,
 1, 5, :_reduce_none,
 2, 7, :_reduce_none,
 1, 7, :_reduce_none,
 2, 6, :_reduce_none,
 1, 6, :_reduce_none,
 1, 6, :_reduce_none,
 1, 9, :_reduce_8,
 1, 8, :_reduce_9 ]

racc_reduce_n = 10

racc_shift_n = 12

racc_action_table = [
     5,     7,     1,     1,    10,     7 ]

racc_action_check = [
     2,     4,     2,     0,     5,     8 ]

racc_action_pointer = [
     1,   nil,     0,   nil,    -2,     4,   nil,   nil,     2,   nil,
   nil,   nil ]

racc_action_default = [
   -10,    -8,   -10,    -2,    -6,   -10,    -1,    -9,    -5,    -4,
    12,    -3 ]

racc_goto_table = [
     9,     3,     8,     6,    11,     2 ]

racc_goto_check = [
     4,     2,     3,     2,     4,     1 ]

racc_goto_pointer = [
   nil,     5,     1,    -2,    -4,   nil ]

racc_goto_default = [
   nil,   nil,   nil,   nil,   nil,     4 ]

racc_token_table = {
 false => 0,
 Object.new => 1,
 :AGENT => 2,
 :RULE => 3 }

racc_use_result_var = true

racc_nt_base = 4

Racc_arg = [
 racc_action_table,
 racc_action_check,
 racc_action_default,
 racc_action_pointer,
 racc_goto_table,
 racc_goto_check,
 racc_goto_default,
 racc_goto_pointer,
 racc_nt_base,
 racc_reduce_table,
 racc_token_table,
 racc_shift_n,
 racc_reduce_n,
 racc_use_result_var ]

Racc_token_to_s_table = [
'$end',
'error',
'AGENT',
'RULE',
'$start',
'document',
'agent',
'rules',
'rule',
'base_agent']

Racc_debug_parser = false

##### racc system variables end #####

 # reduce 0 omitted

 # reduce 1 omitted

 # reduce 2 omitted

 # reduce 3 omitted

 # reduce 4 omitted

 # reduce 5 omitted

 # reduce 6 omitted

 # reduce 7 omitted

  def _reduce_8( val, _values, result )
 @handler.add_agent(val[0])
   result
  end

  def _reduce_9( val, _values, result )
  @handler.add_rule(val[0])
   result
  end

 def _reduce_none( val, _values, result )
  result
 end

  end   # class Parser

end   # module Robots
